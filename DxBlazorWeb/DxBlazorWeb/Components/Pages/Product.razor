@page "/product"
@using DxBlazorWeb.Services.Interface
@using DevExpress.Blazor
@using DxBlazorWeb.Components.Modal
@using DxBlazorWeb.Model
@inject IAppService AppService
@inject IProductService ProductService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Sản phẩm</PageTitle>
<PageHeader Title="Quản lý sản phẩm" />
<style>
    .dxbl-tabs.dxbl-tabs-top > .dxbl-tabs-tablist {
    margin-bottom: 12px;
    }
</style>
<div class="main-content">
    <div class="d-flex flex-column" style="width:100%">
        <DxButton Text="Thêm sản phẩm" IconCssClass="fa fa-plus"
        IconPosition="ButtonIconPosition.BeforeText"
        Click="OpenCreateModal" CssClass="mb-2" />
    </div>
</div>

<div class="main-content">
    <div class="d-flex flex-column" style="width:100%">
        <DxButton Text="Thêm sản phẩm" IconCssClass="fa fa-plus"
        IconPosition="ButtonIconPosition.BeforeText"
        Click="OpenCreateModal" CssClass="mb-2" />

        <!-- Grid chỉ hiển thị các cột của ProductIdentityModel -->
        <DxGrid Data="ProductList" ShowFilterRow="false" PageSize="12" 
        ShowGroupPanel="false" ColumnResizeMode="GridColumnResizeMode.NextColumn">
            <Columns>
                <DxGridDataColumn FieldName="MA_SP" Caption="ID (MA_SP)" Width="260px" />
                <DxGridDataColumn FieldName="TEN_SAN_PHAM" Caption="Tên sản phẩm" />
                <DxGridDataColumn FieldName="MA_HANG"      Caption="Mã hàng" Width="140px" />
                <DxGridDataColumn FieldName="MA_KHACH_HANG" Caption="Mã KH" Width="120px" />
                <DxGridDataColumn FieldName="MA_LO_HANG" Caption="Lô hàng" Width="140px" />
                <DxGridDataColumn FieldName="MA_NHOM_HANG" Caption="Nhóm hàng" Width="140px" />
            </Columns>
        </DxGrid>
    </div>
</div>

<!-- Gọi modal -->
<ProductModal @bind-Visible="isProductModalVisible"
IsEdit="isEdit" />

@code {
    // state của modal
    private bool isProductModalVisible = false;
    private bool isEdit = false;
    public List<SanPham> ProductList { set; get;  } = new();
    private void OpenCreateModal()
    {
        isEdit = false;
        isProductModalVisible = true;
    }

    // Nhận kết quả lưu từ modal
    private async Task OnProductSaved(SanPham saved)
    {
        isProductModalVisible = false;
        // TODO: refresh grid/danh sách sản phẩm nếu có
        await JSRuntime.InvokeVoidAsync("console.log", $"Saved product: {saved.MA_HANG}");
    }
    protected override async Task OnInitializedAsync()
    {
        ProductList = await ProductService.GetAllProductsAsync();
    }
}
