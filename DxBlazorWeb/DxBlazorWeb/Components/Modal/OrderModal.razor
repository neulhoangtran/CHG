@using DxBlazorWeb.Model
@using DevExpress.Blazor

<DxPopup @bind-Visible="Visible"
         Width="700px"
         ShowCloseButton="true"
         CloseOnOutsideClick="true"
         Context="popupContext"
         HeaderText="Đơn hàng">
    <EditForm EditContext="@editContext" Context="editContext" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <DxFormLayout>
            <DxFormLayoutItem Caption="Khách hàng">
                <!-- Chọn theo Tên - Mã, lưu CustomerID -->
                <DxComboBox @bind-Value="Item.CustomerID"
                            Data="@CustomerOptions"
                            TextFieldName="Display"
                            ValueFieldName="Value"
                            NullText="Chọn khách hàng"
                            DropDownStyle="DropDownStyle.DropDownList" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Mã đơn hàng">
                <DxTextBox @bind-Text="Item.OrderCode" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Số lượng">
                <DxSpinEdit @bind-Value="Item.Quantity" Min="1" Increment="100" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Thời gian đặt hàng">
                <DxDateEdit @bind-Date="Item.OrderDate" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Thời gian giao hàng">
                <DxDateEdit @bind-Date="Item.DeliveryDate" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Trạng thái">
                <DxComboBox @bind-Value="Item.Status"
                            Data="@StatusOptions"
                            DropDownStyle="DropDownStyle.DropDownList" />
            </DxFormLayoutItem>

            <DxFormLayoutItem>
                <DxButton Text="Lưu" SubmitFormOnClick="true" RenderStyle="ButtonRenderStyle.Primary" />
                <DxButton Text="Đóng" Click="@(async () => await VisibleChanged.InvokeAsync(false))" CssClass="ml-2" />
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditForm>
</DxPopup>

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public Order Item { get; set; } = new();
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public List<Customer> Customers { get; set; } = new();
    [Parameter] public EventCallback<Order> OnSave { get; set; }

    private record Option(string Value, string Display);
    private List<Option> CustomerOptions => Customers
        .Select(c => new Option(c.ID, $"{c.CustomerName} - {c.CustomerCode}"))
        .ToList();

    private static readonly string[] StatusOptions = new[] {
        "Đã tiếp nhận","Đang sản xuất","Đã xuất kho","Đã giao hàng","Đã hủy"
    };

    private async Task Submit()
    {
        await OnSave.InvokeAsync(Item);
        await VisibleChanged.InvokeAsync(false);
    }
    private EditContext editContext;

    protected override void OnParametersSet()
    {
        editContext = new EditContext(Item);
    }
}
